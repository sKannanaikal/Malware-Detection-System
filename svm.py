import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import classification_report

def main():
	features_dataframe = pd.read_csv('/home/student/Downloads/dataset.csv')
	X = np.arrays(features_dataframe[
		['GetVersion', 'GetLocaleInfoA', 'LoadStringA',
		'LoadStringW', 'DeleteProcThreadAttributeList',
		'UpdateProcThreadAttribute', 'InitializeProcThreadAttributeList',
		'LockSetForegroundWindow', 'SwitchToThisWindow', 'wcstol', 'wcscspn',
		'CryptProtectData', 'lstrcmpi', 'VirtualFree', 'GetThreadLocale',
		'GetLocaleInfoW', 'GetCommandLineW', 'CharNextA', 'RegQueryValueExA',
		'RegOpenKeyExA','MulDiv'
		]])
	y = np.arrays(features_dataframe['Status'])
	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=4)
	malware_detection_model = svm.SVC(kernel='linear', gamma='auto', C=2)
	malware_detection_model.fit(X_train, y_train)
	y_predictions = malware_detection_model.predict(X_test)
	print(classification_report(y_test, y_predictions))

if __name__ == '__main__':
	main()